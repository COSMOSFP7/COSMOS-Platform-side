#Debian is used instead of Ubuntu to reduce as much as possible the size of the resulting image
FROM debian:latest

#Requirements to compile bcep. They will be uninstalled after finishing the building
RUN apt-get update
RUN apt-get install -y g++
RUN apt-get install -y make
RUN apt-get install -y libmosquitto-dev

#Sources of BCEP are copied to the container
COPY ./source/ cep/
WORKDIR cep
#BCEP folder is cleaned
RUN make distclean
#BCEP is compiled
RUN make mqtt

#BCEP intermediary objects are deleted
RUN make clean
#Compiler is uninstalled
RUN apt-get purge -y make
RUN apt-get purge -y g++
#Package manager is cleaned
RUN apt-get clean -y && apt-get autoclean -y && apt-get -y autoremove
RUN rm -rf /var/lib/apt/lists/*
#Unneeded folders and files are deleted
RUN rm -rf src outgoing UnitTest incoming Bin obj Makefile Rakefile

#PM2 setup
RUN apt-get update
RUN apt-get install -y nodejs npm

#NPM setup

RUN npm install -g pm2
RUN ln -s /usr/bin/nodejs /usr/bin/node

#Web interface for pm2
RUN npm install -g pm2-gui

#Package manager is cleaned
RUN apt-get remove npm -y && apt-get clean -y && apt-get autoclean -y && apt-get -y autoremove
RUN rm -rf /var/lib/apt/lists/*

#Command to be executed when the container is launched
# An script is used instead of launching directly pm2. If we would do this, the image will exit after finishing
# the execution of the command, that's just after launching the CEP with PM2. The script will launch CEP with
# PM" and after this, it will tail the log
ADD ./docker/pm2/run.sh /usr/local/bin/run
RUN chmod +x /usr/local/bin/run

ENTRYPOINT ["/usr/local/bin/run"]
